/**
 * generated by Xtext 2.10.0
 */
package org.xtext.univ.nantes.master.dsl.agenda.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.univ.nantes.master.dsl.agenda.AgendaPackage;
import org.xtext.univ.nantes.master.dsl.agenda.EVENT;
import org.xtext.univ.nantes.master.dsl.agenda.TASK;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>TASK</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.univ.nantes.master.dsl.agenda.impl.TASKImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.univ.nantes.master.dsl.agenda.impl.TASKImpl#getRefEvent <em>Ref Event</em>}</li>
 *   <li>{@link org.xtext.univ.nantes.master.dsl.agenda.impl.TASKImpl#getDeadline <em>Deadline</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TASKImpl extends MinimalEObjectImpl.Container implements TASK
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getRefEvent() <em>Ref Event</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRefEvent()
   * @generated
   * @ordered
   */
  protected EVENT refEvent;

  /**
   * The default value of the '{@link #getDeadline() <em>Deadline</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeadline()
   * @generated
   * @ordered
   */
  protected static final String DEADLINE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDeadline() <em>Deadline</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeadline()
   * @generated
   * @ordered
   */
  protected String deadline = DEADLINE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TASKImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AgendaPackage.Literals.TASK;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AgendaPackage.TASK__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EVENT getRefEvent()
  {
    if (refEvent != null && refEvent.eIsProxy())
    {
      InternalEObject oldRefEvent = (InternalEObject)refEvent;
      refEvent = (EVENT)eResolveProxy(oldRefEvent);
      if (refEvent != oldRefEvent)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, AgendaPackage.TASK__REF_EVENT, oldRefEvent, refEvent));
      }
    }
    return refEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EVENT basicGetRefEvent()
  {
    return refEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRefEvent(EVENT newRefEvent)
  {
    EVENT oldRefEvent = refEvent;
    refEvent = newRefEvent;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AgendaPackage.TASK__REF_EVENT, oldRefEvent, refEvent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDeadline()
  {
    return deadline;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDeadline(String newDeadline)
  {
    String oldDeadline = deadline;
    deadline = newDeadline;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AgendaPackage.TASK__DEADLINE, oldDeadline, deadline));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AgendaPackage.TASK__NAME:
        return getName();
      case AgendaPackage.TASK__REF_EVENT:
        if (resolve) return getRefEvent();
        return basicGetRefEvent();
      case AgendaPackage.TASK__DEADLINE:
        return getDeadline();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AgendaPackage.TASK__NAME:
        setName((String)newValue);
        return;
      case AgendaPackage.TASK__REF_EVENT:
        setRefEvent((EVENT)newValue);
        return;
      case AgendaPackage.TASK__DEADLINE:
        setDeadline((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AgendaPackage.TASK__NAME:
        setName(NAME_EDEFAULT);
        return;
      case AgendaPackage.TASK__REF_EVENT:
        setRefEvent((EVENT)null);
        return;
      case AgendaPackage.TASK__DEADLINE:
        setDeadline(DEADLINE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AgendaPackage.TASK__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case AgendaPackage.TASK__REF_EVENT:
        return refEvent != null;
      case AgendaPackage.TASK__DEADLINE:
        return DEADLINE_EDEFAULT == null ? deadline != null : !DEADLINE_EDEFAULT.equals(deadline);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", deadline: ");
    result.append(deadline);
    result.append(')');
    return result.toString();
  }

} //TASKImpl
