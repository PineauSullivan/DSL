/**
 * generated by Xtext 2.10.0
 */
package org.xtext.univ.nantes.master.dsl.agenda.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.univ.nantes.master.dsl.agenda.AGENDA;
import org.xtext.univ.nantes.master.dsl.agenda.AgendaPackage;
import org.xtext.univ.nantes.master.dsl.agenda.CONTENU;
import org.xtext.univ.nantes.master.dsl.agenda.PREAMBULE;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>AGENDA</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.univ.nantes.master.dsl.agenda.impl.AGENDAImpl#getPream <em>Pream</em>}</li>
 *   <li>{@link org.xtext.univ.nantes.master.dsl.agenda.impl.AGENDAImpl#getContenu <em>Contenu</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AGENDAImpl extends MinimalEObjectImpl.Container implements AGENDA
{
  /**
   * The cached value of the '{@link #getPream() <em>Pream</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPream()
   * @generated
   * @ordered
   */
  protected PREAMBULE pream;

  /**
   * The cached value of the '{@link #getContenu() <em>Contenu</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContenu()
   * @generated
   * @ordered
   */
  protected CONTENU contenu;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AGENDAImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AgendaPackage.Literals.AGENDA;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PREAMBULE getPream()
  {
    return pream;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPream(PREAMBULE newPream, NotificationChain msgs)
  {
    PREAMBULE oldPream = pream;
    pream = newPream;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AgendaPackage.AGENDA__PREAM, oldPream, newPream);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPream(PREAMBULE newPream)
  {
    if (newPream != pream)
    {
      NotificationChain msgs = null;
      if (pream != null)
        msgs = ((InternalEObject)pream).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AgendaPackage.AGENDA__PREAM, null, msgs);
      if (newPream != null)
        msgs = ((InternalEObject)newPream).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AgendaPackage.AGENDA__PREAM, null, msgs);
      msgs = basicSetPream(newPream, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AgendaPackage.AGENDA__PREAM, newPream, newPream));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CONTENU getContenu()
  {
    return contenu;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetContenu(CONTENU newContenu, NotificationChain msgs)
  {
    CONTENU oldContenu = contenu;
    contenu = newContenu;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AgendaPackage.AGENDA__CONTENU, oldContenu, newContenu);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setContenu(CONTENU newContenu)
  {
    if (newContenu != contenu)
    {
      NotificationChain msgs = null;
      if (contenu != null)
        msgs = ((InternalEObject)contenu).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AgendaPackage.AGENDA__CONTENU, null, msgs);
      if (newContenu != null)
        msgs = ((InternalEObject)newContenu).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AgendaPackage.AGENDA__CONTENU, null, msgs);
      msgs = basicSetContenu(newContenu, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AgendaPackage.AGENDA__CONTENU, newContenu, newContenu));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AgendaPackage.AGENDA__PREAM:
        return basicSetPream(null, msgs);
      case AgendaPackage.AGENDA__CONTENU:
        return basicSetContenu(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AgendaPackage.AGENDA__PREAM:
        return getPream();
      case AgendaPackage.AGENDA__CONTENU:
        return getContenu();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AgendaPackage.AGENDA__PREAM:
        setPream((PREAMBULE)newValue);
        return;
      case AgendaPackage.AGENDA__CONTENU:
        setContenu((CONTENU)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AgendaPackage.AGENDA__PREAM:
        setPream((PREAMBULE)null);
        return;
      case AgendaPackage.AGENDA__CONTENU:
        setContenu((CONTENU)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AgendaPackage.AGENDA__PREAM:
        return pream != null;
      case AgendaPackage.AGENDA__CONTENU:
        return contenu != null;
    }
    return super.eIsSet(featureID);
  }

} //AGENDAImpl
