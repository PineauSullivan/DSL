/**
 * generated by Xtext 2.10.0
 */
package org.xtext.univ.nantes.master.dsl.agenda.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.univ.nantes.master.dsl.agenda.AgendaPackage;
import org.xtext.univ.nantes.master.dsl.agenda.MODEL;
import org.xtext.univ.nantes.master.dsl.agenda.TYPE;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>MODEL</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.univ.nantes.master.dsl.agenda.impl.MODELImpl#getEntite <em>Entite</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MODELImpl extends MinimalEObjectImpl.Container implements MODEL
{
  /**
   * The cached value of the '{@link #getEntite() <em>Entite</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEntite()
   * @generated
   * @ordered
   */
  protected TYPE entite;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MODELImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AgendaPackage.Literals.MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TYPE getEntite()
  {
    return entite;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEntite(TYPE newEntite, NotificationChain msgs)
  {
    TYPE oldEntite = entite;
    entite = newEntite;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AgendaPackage.MODEL__ENTITE, oldEntite, newEntite);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEntite(TYPE newEntite)
  {
    if (newEntite != entite)
    {
      NotificationChain msgs = null;
      if (entite != null)
        msgs = ((InternalEObject)entite).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AgendaPackage.MODEL__ENTITE, null, msgs);
      if (newEntite != null)
        msgs = ((InternalEObject)newEntite).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AgendaPackage.MODEL__ENTITE, null, msgs);
      msgs = basicSetEntite(newEntite, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AgendaPackage.MODEL__ENTITE, newEntite, newEntite));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AgendaPackage.MODEL__ENTITE:
        return basicSetEntite(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AgendaPackage.MODEL__ENTITE:
        return getEntite();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AgendaPackage.MODEL__ENTITE:
        setEntite((TYPE)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AgendaPackage.MODEL__ENTITE:
        setEntite((TYPE)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AgendaPackage.MODEL__ENTITE:
        return entite != null;
    }
    return super.eIsSet(featureID);
  }

} //MODELImpl
