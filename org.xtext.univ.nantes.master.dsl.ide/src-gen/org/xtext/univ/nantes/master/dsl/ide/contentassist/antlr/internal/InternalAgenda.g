/*
 * generated by Xtext 2.10.0
 */
grammar InternalAgenda;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.univ.nantes.master.dsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.univ.nantes.master.dsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.univ.nantes.master.dsl.services.AgendaGrammarAccess;

}
@parser::members {
	private AgendaGrammarAccess grammarAccess;

	public void setGrammarAccess(AgendaGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleMODEL
entryRuleMODEL
:
{ before(grammarAccess.getMODELRule()); }
	 ruleMODEL
{ after(grammarAccess.getMODELRule()); } 
	 EOF 
;

// Rule MODEL
ruleMODEL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMODELAccess().getEntiteAssignment()); }
		(rule__MODEL__EntiteAssignment)
		{ after(grammarAccess.getMODELAccess().getEntiteAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTYPE
entryRuleTYPE
:
{ before(grammarAccess.getTYPERule()); }
	 ruleTYPE
{ after(grammarAccess.getTYPERule()); } 
	 EOF 
;

// Rule TYPE
ruleTYPE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTYPEAccess().getAGENDAParserRuleCall()); }
		ruleAGENDA
		{ after(grammarAccess.getTYPEAccess().getAGENDAParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAGENDA
entryRuleAGENDA
:
{ before(grammarAccess.getAGENDARule()); }
	 ruleAGENDA
{ after(grammarAccess.getAGENDARule()); } 
	 EOF 
;

// Rule AGENDA
ruleAGENDA 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAGENDAAccess().getGroup()); }
		(rule__AGENDA__Group__0)
		{ after(grammarAccess.getAGENDAAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEVENT
entryRuleEVENT
:
{ before(grammarAccess.getEVENTRule()); }
	 ruleEVENT
{ after(grammarAccess.getEVENTRule()); } 
	 EOF 
;

// Rule EVENT
ruleEVENT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEVENTAccess().getGroup()); }
		(rule__EVENT__Group__0)
		{ after(grammarAccess.getEVENTAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTASK
entryRuleTASK
:
{ before(grammarAccess.getTASKRule()); }
	 ruleTASK
{ after(grammarAccess.getTASKRule()); } 
	 EOF 
;

// Rule TASK
ruleTASK 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTASKAccess().getGroup()); }
		(rule__TASK__Group__0)
		{ after(grammarAccess.getTASKAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AGENDA__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AGENDA__Group__0__Impl
	rule__AGENDA__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AGENDA__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAGENDAAccess().getAgendaKeyword_0()); }
	'Agenda'
	{ after(grammarAccess.getAGENDAAccess().getAgendaKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AGENDA__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AGENDA__Group__1__Impl
	rule__AGENDA__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AGENDA__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAGENDAAccess().getNameAssignment_1()); }
	(rule__AGENDA__NameAssignment_1)
	{ after(grammarAccess.getAGENDAAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AGENDA__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AGENDA__Group__2__Impl
	rule__AGENDA__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AGENDA__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAGENDAAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getAGENDAAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AGENDA__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AGENDA__Group__3__Impl
	rule__AGENDA__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AGENDA__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAGENDAAccess().getDescriptionKeyword_3()); }
	'Description'
	{ after(grammarAccess.getAGENDAAccess().getDescriptionKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AGENDA__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AGENDA__Group__4__Impl
	rule__AGENDA__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AGENDA__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAGENDAAccess().getDescriptionAssignment_4()); }
	(rule__AGENDA__DescriptionAssignment_4)
	{ after(grammarAccess.getAGENDAAccess().getDescriptionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AGENDA__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AGENDA__Group__5__Impl
	rule__AGENDA__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AGENDA__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAGENDAAccess().getEventAssignment_5()); }
	(rule__AGENDA__EventAssignment_5)*
	{ after(grammarAccess.getAGENDAAccess().getEventAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AGENDA__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AGENDA__Group__6__Impl
	rule__AGENDA__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AGENDA__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAGENDAAccess().getTaskAssignment_6()); }
	(rule__AGENDA__TaskAssignment_6)*
	{ after(grammarAccess.getAGENDAAccess().getTaskAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AGENDA__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AGENDA__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AGENDA__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAGENDAAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getAGENDAAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EVENT__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EVENT__Group__0__Impl
	rule__EVENT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENT__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEVENTAccess().getEventKeyword_0()); }
	'Event'
	{ after(grammarAccess.getEVENTAccess().getEventKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENT__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EVENT__Group__1__Impl
	rule__EVENT__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENT__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEVENTAccess().getNameAssignment_1()); }
	(rule__EVENT__NameAssignment_1)
	{ after(grammarAccess.getEVENTAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENT__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EVENT__Group__2__Impl
	rule__EVENT__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENT__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEVENTAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getEVENTAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENT__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EVENT__Group__3__Impl
	rule__EVENT__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENT__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEVENTAccess().getPlaceKeyword_3()); }
	'Place'
	{ after(grammarAccess.getEVENTAccess().getPlaceKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENT__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EVENT__Group__4__Impl
	rule__EVENT__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENT__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEVENTAccess().getPlaceAssignment_4()); }
	(rule__EVENT__PlaceAssignment_4)
	{ after(grammarAccess.getEVENTAccess().getPlaceAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENT__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EVENT__Group__5__Impl
	rule__EVENT__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENT__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEVENTAccess().getDateKeyword_5()); }
	'Date'
	{ after(grammarAccess.getEVENTAccess().getDateKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENT__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EVENT__Group__6__Impl
	rule__EVENT__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENT__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEVENTAccess().getDateAssignment_6()); }
	(rule__EVENT__DateAssignment_6)
	{ after(grammarAccess.getEVENTAccess().getDateAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENT__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EVENT__Group__7__Impl
	rule__EVENT__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENT__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEVENTAccess().getStartKeyword_7()); }
	'Start'
	{ after(grammarAccess.getEVENTAccess().getStartKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENT__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EVENT__Group__8__Impl
	rule__EVENT__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENT__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEVENTAccess().getStartAssignment_8()); }
	(rule__EVENT__StartAssignment_8)
	{ after(grammarAccess.getEVENTAccess().getStartAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENT__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EVENT__Group__9__Impl
	rule__EVENT__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENT__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEVENTAccess().getEndKeyword_9()); }
	'End'
	{ after(grammarAccess.getEVENTAccess().getEndKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENT__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EVENT__Group__10__Impl
	rule__EVENT__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENT__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEVENTAccess().getEndAssignment_10()); }
	(rule__EVENT__EndAssignment_10)
	{ after(grammarAccess.getEVENTAccess().getEndAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENT__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EVENT__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENT__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEVENTAccess().getRightCurlyBracketKeyword_11()); }
	'}'
	{ after(grammarAccess.getEVENTAccess().getRightCurlyBracketKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TASK__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TASK__Group__0__Impl
	rule__TASK__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TASK__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTASKAccess().getTaskKeyword_0()); }
	'Task'
	{ after(grammarAccess.getTASKAccess().getTaskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TASK__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TASK__Group__1__Impl
	rule__TASK__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TASK__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTASKAccess().getNameAssignment_1()); }
	(rule__TASK__NameAssignment_1)
	{ after(grammarAccess.getTASKAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TASK__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TASK__Group__2__Impl
	rule__TASK__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TASK__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTASKAccess().getGroup_2()); }
	(rule__TASK__Group_2__0)?
	{ after(grammarAccess.getTASKAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TASK__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TASK__Group__3__Impl
	rule__TASK__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TASK__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTASKAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getTASKAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TASK__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TASK__Group__4__Impl
	rule__TASK__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TASK__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTASKAccess().getDeadlineKeyword_4()); }
	'deadline'
	{ after(grammarAccess.getTASKAccess().getDeadlineKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TASK__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TASK__Group__5__Impl
	rule__TASK__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TASK__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTASKAccess().getDeadlineAssignment_5()); }
	(rule__TASK__DeadlineAssignment_5)
	{ after(grammarAccess.getTASKAccess().getDeadlineAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TASK__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TASK__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TASK__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTASKAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getTASKAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TASK__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TASK__Group_2__0__Impl
	rule__TASK__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TASK__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTASKAccess().getRelatesToKeyword_2_0()); }
	'relatesTo'
	{ after(grammarAccess.getTASKAccess().getRelatesToKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TASK__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TASK__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TASK__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTASKAccess().getRefEventAssignment_2_1()); }
	(rule__TASK__RefEventAssignment_2_1)
	{ after(grammarAccess.getTASKAccess().getRefEventAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MODEL__EntiteAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMODELAccess().getEntiteTYPEParserRuleCall_0()); }
		ruleTYPE
		{ after(grammarAccess.getMODELAccess().getEntiteTYPEParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AGENDA__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAGENDAAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAGENDAAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AGENDA__DescriptionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAGENDAAccess().getDescriptionSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getAGENDAAccess().getDescriptionSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AGENDA__EventAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAGENDAAccess().getEventEVENTParserRuleCall_5_0()); }
		ruleEVENT
		{ after(grammarAccess.getAGENDAAccess().getEventEVENTParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AGENDA__TaskAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAGENDAAccess().getTaskTASKParserRuleCall_6_0()); }
		ruleTASK
		{ after(grammarAccess.getAGENDAAccess().getTaskTASKParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENT__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEVENTAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEVENTAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENT__PlaceAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEVENTAccess().getPlaceSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getEVENTAccess().getPlaceSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENT__DateAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEVENTAccess().getDateSTRINGTerminalRuleCall_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getEVENTAccess().getDateSTRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENT__StartAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEVENTAccess().getStartSTRINGTerminalRuleCall_8_0()); }
		RULE_STRING
		{ after(grammarAccess.getEVENTAccess().getStartSTRINGTerminalRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EVENT__EndAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEVENTAccess().getEndSTRINGTerminalRuleCall_10_0()); }
		RULE_STRING
		{ after(grammarAccess.getEVENTAccess().getEndSTRINGTerminalRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TASK__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTASKAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTASKAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TASK__RefEventAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTASKAccess().getRefEventEVENTCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getTASKAccess().getRefEventEVENTIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTASKAccess().getRefEventEVENTIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getTASKAccess().getRefEventEVENTCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TASK__DeadlineAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTASKAccess().getDeadlineSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getTASKAccess().getDeadlineSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
